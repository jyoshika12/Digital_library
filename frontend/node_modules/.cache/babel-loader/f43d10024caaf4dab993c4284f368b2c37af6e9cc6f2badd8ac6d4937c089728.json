{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jjyos\\\\OneDrive\\\\Desktop\\\\online learning platform\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import styled from 'styled-components';\n// import axios from 'axios';\n// import backgroundImage from '../images/Digital-Library-1.jpg'; // Adjust path as necessary\n\n// const LoginContainer = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   justify-content: center;\n//   height: 100vh;\n//   position: relative;\n// `;\n\n// const BackgroundImage = styled.div`\n//   position: absolute;\n//   top: 0;\n//   left: 0;\n//   width: 100%;\n//   height: 100%;\n//   background-image: url(${backgroundImage});\n//   background-size: cover;\n//   background-position: center;\n//   filter: blur(8px);\n//   z-index: -1;\n// `;\n\n// const LoginBox = styled.div`\n//   background: rgba(255, 255, 255, 0.8);\n//   padding: 30px;\n//   border-radius: 10px;\n//   box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);\n//   width: 100%;\n//   max-width: 400px;\n//   text-align: center;\n//   z-index: 1;\n// `;\n\n// const Input = styled.input`\n//   width: calc(100% - 20px);\n//   padding: 10px;\n//   margin: 10px 0;\n//   border: 1px solid #ccc;\n//   border-radius: 5px;\n// `;\n\n// const Button = styled.button`\n//   width: calc(100% - 20px);\n//   padding: 10px;\n//   border: none;\n//   border-radius: 5px;\n//   background-color: #007bff;\n//   color: white;\n//   font-size: 16px;\n//   cursor: pointer;\n\n//   &:hover {\n//     background-color: #0056b3;\n//   }\n// `;\n\n// const Login = ({ setIsLoggedIn }) => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://localhost:5001/login', { username, password });\n//       setMessage('Login successful');\n//       console.log(response.data);\n//       setIsLoggedIn(true); // Update the login state\n//       navigate('/'); // Redirect to Home component\n//     } catch (error) {\n//       if (error.response) {\n//         setMessage('Login failed: ' + (error.response.data.error || 'Server error'));\n//       } else if (error.request) {\n//         setMessage('Login failed: No response from server');\n//       } else {\n//         setMessage('Login failed: ' + error.message);\n//       }\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <LoginContainer>\n//       <BackgroundImage />\n//       <LoginBox>\n//         <h2>Login</h2>\n//         <form onSubmit={handleSubmit}>\n//           <Input\n//             type=\"text\"\n//             placeholder=\"Username\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required // Ensure this field is required\n//           />\n//           <Input\n//             type=\"password\"\n//             placeholder=\"Password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required // Ensure this field is required\n//           />\n//           <Button type=\"submit\">Login</Button>\n//         </form>\n//         {message && <p>{message}</p>}\n//         <p>\n//           Don't have an account? <Link to=\"/signup\">Sign up</Link>\n//         </p>\n//       </LoginBox>\n//     </LoginContainer>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport backgroundImage from '../images/Digital-Library-1.jpg'; // Adjust path as necessary\n\n// Styled components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  position: relative;\n`;\n_c = LoginContainer;\nconst BackgroundImage = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${backgroundImage});\n  background-size: cover;\n  background-position: center;\n  filter: blur(8px);\n  z-index: -1;\n`;\n_c2 = BackgroundImage;\nconst LoginBox = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  padding: 30px;\n  border-radius: 10px;\n  box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);\n  width: 100%;\n  max-width: 400px;\n  text-align: center;\n  z-index: 1;\n`;\n_c3 = LoginBox;\nconst Input = styled.input`\n  width: calc(100% - 20px);\n  padding: 10px;\n  margin: 10px 0;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n_c4 = Input;\nconst Button = styled.button`\n  width: calc(100% - 20px);\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #007bff;\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n  opacity: ${props => props.disabled ? 0.6 : 1};\n  \n  &:hover {\n    background-color: ${props => props.disabled ? '#007bff' : '#0056b3'};\n  }\n`;\n_c5 = Button;\nconst Message = styled.p`\n  color: ${props => props.error ? 'red' : 'green'};\n  font-size: 14px;\n`;\n_c6 = Message;\nconst Login = ({\n  setIsLoggedIn\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false); // Loading state for button disable\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true); // Start loading\n    setMessage(''); // Clear previous messages\n\n    try {\n      const response = await axios.post('http://localhost:5001/login', {\n        username,\n        password\n      });\n\n      // Assume the response contains a token\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('authToken', token); // Store token in localStorage\n\n      setMessage('Login successful!');\n      setIsLoggedIn(true); // Update the login state\n      setUsername(''); // Clear form\n      setPassword('');\n      navigate('/'); // Redirect to Home component\n    } catch (error) {\n      if (error.response) {\n        setMessage('Login failed: ' + (error.response.data.error || 'Invalid credentials'));\n      } else if (error.request) {\n        setMessage('Login failed: No response from server');\n      } else {\n        setMessage('Login failed: ' + error.message);\n      }\n      setIsLoggedIn(false); // Ensure user is not logged in\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoginContainer, {\n    children: [/*#__PURE__*/_jsxDEV(BackgroundImage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true // Ensure this field is required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true // Ensure this field is required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Logging in...' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        error: message.includes('failed'),\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"SktY3/kjkEbF+tLb7LSpVfUlJyc=\", false, function () {\n  return [useNavigate];\n});\n_c7 = Login;\nexport default Login;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"LoginContainer\");\n$RefreshReg$(_c2, \"BackgroundImage\");\n$RefreshReg$(_c3, \"LoginBox\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"Message\");\n$RefreshReg$(_c7, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","styled","axios","backgroundImage","jsxDEV","_jsxDEV","LoginContainer","div","_c","BackgroundImage","_c2","LoginBox","_c3","Input","input","_c4","Button","button","props","disabled","_c5","Message","p","error","_c6","Login","setIsLoggedIn","_s","username","setUsername","password","setPassword","message","setMessage","loading","setLoading","navigate","handleSubmit","e","preventDefault","response","post","token","data","localStorage","setItem","request","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","includes","to","_c7","$RefreshReg$"],"sources":["C:/Users/jjyos/OneDrive/Desktop/online learning platform/frontend/src/components/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import styled from 'styled-components';\r\n// import axios from 'axios';\r\n// import backgroundImage from '../images/Digital-Library-1.jpg'; // Adjust path as necessary\r\n\r\n// const LoginContainer = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   height: 100vh;\r\n//   position: relative;\r\n// `;\r\n\r\n// const BackgroundImage = styled.div`\r\n//   position: absolute;\r\n//   top: 0;\r\n//   left: 0;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   background-image: url(${backgroundImage});\r\n//   background-size: cover;\r\n//   background-position: center;\r\n//   filter: blur(8px);\r\n//   z-index: -1;\r\n// `;\r\n\r\n// const LoginBox = styled.div`\r\n//   background: rgba(255, 255, 255, 0.8);\r\n//   padding: 30px;\r\n//   border-radius: 10px;\r\n//   box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);\r\n//   width: 100%;\r\n//   max-width: 400px;\r\n//   text-align: center;\r\n//   z-index: 1;\r\n// `;\r\n\r\n// const Input = styled.input`\r\n//   width: calc(100% - 20px);\r\n//   padding: 10px;\r\n//   margin: 10px 0;\r\n//   border: 1px solid #ccc;\r\n//   border-radius: 5px;\r\n// `;\r\n\r\n// const Button = styled.button`\r\n//   width: calc(100% - 20px);\r\n//   padding: 10px;\r\n//   border: none;\r\n//   border-radius: 5px;\r\n//   background-color: #007bff;\r\n//   color: white;\r\n//   font-size: 16px;\r\n//   cursor: pointer;\r\n\r\n//   &:hover {\r\n//     background-color: #0056b3;\r\n//   }\r\n// `;\r\n\r\n// const Login = ({ setIsLoggedIn }) => {\r\n//   const [username, setUsername] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.post('http://localhost:5001/login', { username, password });\r\n//       setMessage('Login successful');\r\n//       console.log(response.data);\r\n//       setIsLoggedIn(true); // Update the login state\r\n//       navigate('/'); // Redirect to Home component\r\n//     } catch (error) {\r\n//       if (error.response) {\r\n//         setMessage('Login failed: ' + (error.response.data.error || 'Server error'));\r\n//       } else if (error.request) {\r\n//         setMessage('Login failed: No response from server');\r\n//       } else {\r\n//         setMessage('Login failed: ' + error.message);\r\n//       }\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <LoginContainer>\r\n//       <BackgroundImage />\r\n//       <LoginBox>\r\n//         <h2>Login</h2>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <Input\r\n//             type=\"text\"\r\n//             placeholder=\"Username\"\r\n//             value={username}\r\n//             onChange={(e) => setUsername(e.target.value)}\r\n//             required // Ensure this field is required\r\n//           />\r\n//           <Input\r\n//             type=\"password\"\r\n//             placeholder=\"Password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             required // Ensure this field is required\r\n//           />\r\n//           <Button type=\"submit\">Login</Button>\r\n//         </form>\r\n//         {message && <p>{message}</p>}\r\n//         <p>\r\n//           Don't have an account? <Link to=\"/signup\">Sign up</Link>\r\n//         </p>\r\n//       </LoginBox>\r\n//     </LoginContainer>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport backgroundImage from '../images/Digital-Library-1.jpg'; // Adjust path as necessary\r\n\r\n// Styled components\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  position: relative;\r\n`;\r\n\r\nconst BackgroundImage = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${backgroundImage});\r\n  background-size: cover;\r\n  background-position: center;\r\n  filter: blur(8px);\r\n  z-index: -1;\r\n`;\r\n\r\nconst LoginBox = styled.div`\r\n  background: rgba(255, 255, 255, 0.8);\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);\r\n  width: 100%;\r\n  max-width: 400px;\r\n  text-align: center;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: calc(100% - 20px);\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: calc(100% - 20px);\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  opacity: ${(props) => (props.disabled ? 0.6 : 1)};\r\n  \r\n  &:hover {\r\n    background-color: ${(props) => (props.disabled ? '#007bff' : '#0056b3')};\r\n  }\r\n`;\r\n\r\nconst Message = styled.p`\r\n  color: ${(props) => (props.error ? 'red' : 'green')};\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Login = ({ setIsLoggedIn }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false); // Loading state for button disable\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true); // Start loading\r\n    setMessage(''); // Clear previous messages\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5001/login', { username, password });\r\n      \r\n      // Assume the response contains a token\r\n      const { token } = response.data;\r\n      localStorage.setItem('authToken', token); // Store token in localStorage\r\n\r\n      setMessage('Login successful!');\r\n      setIsLoggedIn(true); // Update the login state\r\n      setUsername(''); // Clear form\r\n      setPassword('');\r\n      navigate('/'); // Redirect to Home component\r\n    } catch (error) {\r\n      if (error.response) {\r\n        setMessage('Login failed: ' + (error.response.data.error || 'Invalid credentials'));\r\n      } else if (error.request) {\r\n        setMessage('Login failed: No response from server');\r\n      } else {\r\n        setMessage('Login failed: ' + error.message);\r\n      }\r\n      setIsLoggedIn(false); // Ensure user is not logged in\r\n    } finally {\r\n      setLoading(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginContainer>\r\n      <BackgroundImage />\r\n      <LoginBox>\r\n        <h2>Login</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required // Ensure this field is required\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required // Ensure this field is required\r\n          />\r\n          <Button type=\"submit\" disabled={loading}>\r\n            {loading ? 'Logging in...' : 'Login'}\r\n          </Button>\r\n        </form>\r\n        {message && <Message error={message.includes('failed')}>{message}</Message>}\r\n        <p>\r\n          Don't have an account? <Link to=\"/signup\">Sign up</Link>\r\n        </p>\r\n      </LoginBox>\r\n    </LoginContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,iCAAiC,CAAC,CAAC;;AAE/D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGL,MAAM,CAACM,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIF,cAAc;AASpB,MAAMG,eAAe,GAAGR,MAAM,CAACM,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA,0BAA0BJ,eAAe;AACzC;AACA;AACA;AACA;AACA,CAAC;AAACO,GAAA,GAXID,eAAe;AAarB,MAAME,QAAQ,GAAGV,MAAM,CAACM,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GATID,QAAQ;AAWd,MAAME,KAAK,GAAGZ,MAAM,CAACa,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}